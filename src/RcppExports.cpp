// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calc_sum_cpp
double calc_sum_cpp(const std::vector<double>& values);
RcppExport SEXP cirthree_calc_sum_cpp(SEXP valuesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<double>& >::type values(valuesSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_sum_cpp(values));
    return rcpp_result_gen;
END_RCPP
}
// get_proper_divisors
std::vector<int> get_proper_divisors(const int n);
RcppExport SEXP cirthree_get_proper_divisors(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(get_proper_divisors(n));
    return rcpp_result_gen;
END_RCPP
}
